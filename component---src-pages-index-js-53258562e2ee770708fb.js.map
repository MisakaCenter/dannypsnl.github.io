{"version":3,"sources":["webpack:///./src/components/blogPost.js","webpack:///./src/pages/index.js"],"names":["blogURL","title","timeToRead","fileName","excerpt","to","style","color","textDecoration","nameToYYYYMMDD","name","split","slice","join","nameToDate","Date","parse","query","IndexPage","data","edges","allMarkdownRemark","sort","a","b","node","parent","site","siteMetadata","description","totalCount","map","key","id","fields","slug","frontmatter"],"mappings":"yNAGe,kBAAGA,EAAH,EAAGA,QAASC,EAAZ,EAAYA,MAAOC,EAAnB,EAAmBA,WAAYC,EAA/B,EAA+BA,SAAUC,EAAzC,EAAyCA,QAAzC,OACb,6BACE,kBAAC,OAAD,CACEC,GAAIL,EACJM,MAAO,CACLC,MAAM,UACNC,eAAe,SAGjB,4BAAKP,IAEP,8BACGC,EADH,IACgB,eACbO,EAAeN,IAElB,2BAAIC,KAIFK,EAAiB,SAACC,GAAD,OAAUA,EAAKC,MAAL,KAAgBC,MAAM,EAAG,GAAGC,KAA5B,MCe3BC,G,UAAa,SAACJ,GAAD,OAAUK,KAAKC,MAAMP,EAAeC,MACjDD,EAAiB,SAACC,GAAD,OAAUA,EAAKC,MAAL,KAAgBC,MAAM,EAAG,GAAGC,KAA5B,MAIpBI,GAFEC,UA/BG,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACbC,EAAQD,EAAKE,kBAAkBD,MAAME,MACzC,SAACC,EAAGC,GAAJ,OAAUV,EAAWU,EAAEC,KAAKC,OAAOhB,MAAQI,EAAWS,EAAEE,KAAKC,OAAOhB,SAEtE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACET,MAAOkB,EAAKQ,KAAKC,aAAa3B,MAC9B4B,YAAaV,EAAKQ,KAAKC,aAAaC,cAEtC,6BACE,4BAAKV,EAAKE,kBAAkBS,WAA5B,UACCV,EAAMW,KAAI,gBAAGN,EAAH,EAAGA,KAAH,OACT,yBAAKO,IAAKP,EAAKQ,IACb,kBAAC,EAAD,CACEjC,QAASyB,EAAKS,OAAOC,KACrBlC,MAAOwB,EAAKW,YAAYnC,MACxBC,WAAYuB,EAAKvB,WACjBC,SAAUsB,EAAKC,OAAOhB,KACtBN,QAASqB,EAAKrB,iBAcV","file":"component---src-pages-index-js-53258562e2ee770708fb.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nexport default ({ blogURL, title, timeToRead, fileName, excerpt }) => (\n  <div>\n    <Link\n      to={blogURL}\n      style={{\n        color: `#99197b`,\n        textDecoration: `none`,\n      }}\n    >\n      <h3>{title}</h3>\n    </Link>\n    <span>\n      {timeToRead} {\" min read â€¢ \"}\n      {nameToYYYYMMDD(fileName)}\n    </span>\n    <p>{excerpt}</p>\n  </div>\n)\n\nconst nameToYYYYMMDD = (name) => name.split(`-`).slice(0, 3).join(`-`)\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { graphql } from \"gatsby\"\nimport BlogPost from \"../components/blogPost\"\n\nimport \"katex/dist/katex.min.css\"\n\nconst IndexPage = ({ data }) => {\n  const edges = data.allMarkdownRemark.edges.sort(\n    (a, b) => nameToDate(b.node.parent.name) - nameToDate(a.node.parent.name)\n  )\n  return (\n    <Layout>\n      <SEO\n        title={data.site.siteMetadata.title}\n        description={data.site.siteMetadata.description}\n      />\n      <div>\n        <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n        {edges.map(({ node }) => (\n          <div key={node.id}>\n            <BlogPost\n              blogURL={node.fields.slug}\n              title={node.frontmatter.title}\n              timeToRead={node.timeToRead}\n              fileName={node.parent.name}\n              excerpt={node.excerpt}\n            />\n          </div>\n        ))}\n      </div>\n    </Layout>\n  )\n}\n\nconst nameToDate = (name) => Date.parse(nameToYYYYMMDD(name))\nconst nameToYYYYMMDD = (name) => name.split(`-`).slice(0, 3).join(`-`)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            image {\n              path\n              thumbnail\n            }\n          }\n          fields {\n            slug\n          }\n          parent {\n            ... on File {\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}