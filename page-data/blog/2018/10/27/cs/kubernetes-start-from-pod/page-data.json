{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2018/10/27/cs/kubernetes-start-from-pod/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://dannypsnl.github.io"}},"markdownRemark":{"html":"<blockquote>\n<p>欲閱讀本篇文章至少需要知道何為 container，由於範例將採用 Docker 為例，所以也預設讀者已經具備操作 Docker 的能力；且讀過 kubernetes 的<a href=\"https://kubernetes.io/docs/concepts/\">基礎概念</a>只是還沒開始用而已</p>\n</blockquote>\n<p>Kubernetes 最小部署的單位為 Pod，一個 Pod 是 1 至 N 個 container 的群組，它們共享了網路(Network)和儲存空間(Storage)</p>\n<p>這麼設計的好處之一是某些本來就耦合的比較嚴重的元件可以被封裝起來，而不需要硬是重寫成一個元件</p>\n<p>雖然 Pod 是一組 container，對外部而言，那裡只有 Pod 而已，而通常我們還會再用 Service(Kubernetes 的另一種 Resource)包裝一群 Pod</p>\n<blockquote>\n<p>比起是誰在服務，更重要的是有沒有服務</p>\n</blockquote>\n<p>Pod 在 Kubernetes 中會被配給一個邏輯 IP(值得注意的是，這個 IP 是跨 namespace 的)，這即是其他內部(Kubernetes cluster 內)元件連結該 Pod 的通道</p>\n<p>不過在其他東西之前，我想先提有哪些工具可以用來 debug 一個 Pod</p>\n<blockquote>\n<p>p.s. 在接下來的指令中，我都會直接用 <code class=\"language-text\">k</code> 替代 <code class=\"language-text\">kubectl</code>(想知道怎弄就去 google)，<code class=\"language-text\">$</code> 的變數開頭表示是你要按情況修改的參數</p>\n</blockquote>\n<p>Auto completion 的一些討論: <a href=\"https://discuss.kubernetes.io/t/kubectl-tips-and-tricks/192/10\">https://discuss.kubernetes.io/t/kubectl-tips-and-tricks/192/10</a></p>\n<ul>\n<li><code class=\"language-text\">k get po</code>: 這是列出 pods 的意思\n注意是一個 namespace(預設是 deault 這個 namespace)底下的所有，但反正現在講這個就扯太遠，有興趣請參考 <a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\">Namespace Doc</a></li>\n<li>\n<p><code class=\"language-text\">k logs $pod-name</code>: 要用這個指令之前你通常會需要上一個指令，因為 <code class=\"language-text\">logs</code> 吃的參數是 Pod 的名稱\ne.g.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ k get po\nNAME                                          READY   STATUS    RESTARTS   AGE\nacs-helloworld-callous-worm-7d549b8f9-dfbhx   <span class=\"token number\">1</span>/1     Running   <span class=\"token number\">0</span>          6h\n$ k logs acs-helloworld-callous-worm-7d549b8f9-dfbhx</code></pre></div>\n<p>這裡 Pod 名字就是 <code class=\"language-text\">acs-helloworld-callous-worm-7d549b8f9-dfbhx</code><br>\n這個指令可以拿到 Pod 中的 container 的 stdout 的輸出(所以我們這裡沒打 container 名稱是因為只有一個 container 存在)，\n你能用 <code class=\"language-text\">-c</code> 或 <code class=\"language-text\">--container</code> 指定特定的 container\np.s. 等等我們建立 Pod 的時候會需要給 Pod 一個名字，那麼你可能會很好奇，為什麼這樣還需要指令？\n這是因為通常我們不會直接建立一個 Pod，而是用 Deployment 一次部署大量的 Pod，這時候產出的名字就跟你眼前所見的差不多糟糕</p>\n</li>\n<li><code class=\"language-text\">k describe po $pod-name</code>: 這個指令非常的重要，因為如果 Pod 根本無法啟動的話，你是拿不到 logs 的，這時候你就只能依靠 describe 取得 kubernetes 知道的訊息，這在環境出問題時可以幫助你更快的定位原因，例如 Node 沒資源給你了</li>\n<li><code class=\"language-text\">k port-forward $pod-name $localhost-port:$pod-port</code>: 這可以把 Pod 的 <code class=\"language-text\">$pod-port</code> 對應到 localhost 的 <code class=\"language-text\">$localhost-port</code> 上，很適合在確定 Pod 如預期般工作時使用</li>\n<li><code class=\"language-text\">k exec -ti $pod-name $command</code>: 這跟 Docker 的 exec 基本一樣，<code class=\"language-text\">$command</code> 用 <code class=\"language-text\">sh</code> 之類的就能進入 container 去做別的事</li>\n</ul>\n<p>那麼，讓我們開始寫第一個 Pod 吧</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># alpine.yaml</span>\n<span class=\"token key atrule\">apiVersion</span><span class=\"token punctuation\">:</span> v1\n<span class=\"token key atrule\">kind</span><span class=\"token punctuation\">:</span> Pod\n<span class=\"token key atrule\">metadata</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> debugger\n  <span class=\"token key atrule\">namespace</span><span class=\"token punctuation\">:</span> default\n<span class=\"token key atrule\">spec</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">containers</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> alpine\n      <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> alpine\n      <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"sh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-c\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"echo The debugger is running &amp;&amp; sleep 3600\"</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">restartPolicy</span><span class=\"token punctuation\">:</span> Always</code></pre></div>\n<p>選擇這個樣板作為開始是因為我經常用這玩意來 debug 跟測試，所以推薦各位建立兩個這樣的 Pod 作為除錯/測試之用</p>\n<p>接著我解釋一下這個設定檔:</p>\n<ul>\n<li><code class=\"language-text\">apiVersion</code>: 這東西，不要懷疑，去看文件學什麼時候用什麼</li>\n<li><code class=\"language-text\">kind</code>: Resource 的種類</li>\n<li><code class=\"language-text\">metadata</code>: Pod 的一些資訊，這個設定檔有寫的是 <code class=\"language-text\">name</code> 跟 <code class=\"language-text\">namespace</code>，<code class=\"language-text\">name</code> 基本就是你 <code class=\"language-text\">get po</code> 看到的名字，<code class=\"language-text\">namespace</code> 則強制了只能部署在哪個 namespace 底下</li>\n<li>\n<p><code class=\"language-text\">spec</code>: 內容</p>\n<ul>\n<li><code class=\"language-text\">containers</code>: container 的列表，如開頭所言，Pod 是一群 container</li>\n<li><code class=\"language-text\">name</code>: container 的名字(多個 container 時可以用上)</li>\n<li><code class=\"language-text\">image</code>: 所使用的 container 映像檔</li>\n<li><code class=\"language-text\">command</code>: 啟動時執行的命令</li>\n<li><code class=\"language-text\">restartPolicy</code>: 設定 kubernetes 該如何決定何時/是否重啟 Pod，這裡是永遠重啟</li>\n</ul>\n</li>\n</ul>\n<p>Pod 可能在以下五種狀態之一，稱之為 Pod lifecycle:</p>\n<ul>\n<li>Pending: 還有 container image 沒建立完成</li>\n<li>Running: 底下還有 container 正在執行</li>\n<li>Succeeded: Pod 中所有的 container 都正確結束，且 Pod 不再重啟</li>\n<li>Failed: 至少一個 container 不正確的結束，且所有 container 都已被終止</li>\n<li>Unknown: 總之，拿不到 Pod 的狀態</li>\n</ul>\n<p>restartPolicy 可以為</p>\n<ul>\n<li>Always(default): 如果執行結束了也要重啟</li>\n<li>OnFailure: 失敗時重啟</li>\n<li>Never: 掛了就不管了</li>\n</ul>\n<p>在 <a href=\"https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#example-states\">Pod lifecycle#example-states</a> 中有更詳盡的舉例可以學習</p>\n<p>現在我們可以使用這個設定檔建立我們的 Pod 了，指令是 <code class=\"language-text\">k apply -f alpine.yaml</code></p>\n<p><code class=\"language-text\">apply -f</code> 會套用你給的設定檔建立 Resource，同時也會檢查該設定檔的錯誤，如有錯誤是不會建立資源的</p>\n<p>接著你應該會看到 <code class=\"language-text\">pod/alpine created</code> 這樣的回應，這就代表我們的 Pod 成功建立了</p>\n<p>然後我們用 <code class=\"language-text\">logs</code> 指令去查看紀錄</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ k logs alpine\nThe debugger is running</code></pre></div>\n<p>你可以看到啟動時要求 container 執行的指令輸出</p>\n<p>那麼這篇就告一段落，關於 Volume，有興趣的朋友可以先看 <a href=\"https://kubernetes.io/docs/concepts/storage/volumes/\">Volumes</a> 這篇官方介紹</p>\n<h3>References:</h3>\n<h4><a href=\"https://www.manning.com/books/kubernetes-in-action\">Kubernetes in Action</a></h4>\n<ul>\n<li>Author: Marko Lukša</li>\n<li>ISBN: 978-1-617-29372-6</li>\n</ul>\n<h4><a href=\"https://kubernetes.io/docs/concepts/workloads/pods/pod/\">Offical Pod Document</a></h4>","frontmatter":{"title":"Kubernetes 從 Pod 開始","categories":["cs"],"tags":["kubernetes"]}},"allMarkdownRemark":{"edges":[{"node":{"id":"7b2485d7-e7c3-57fd-9547-16fd402b114d","frontmatter":{"title":"How to find mk fixed point","categories":["cs"],"tags":["plt","utlc","fixed point"]},"fields":{"slug":"/blog/2020/07/27/cs/how-to-find-mk-fixed-point/"}}},{"node":{"id":"546863be-ba1c-595e-8370-eb774f31f60c","frontmatter":{"title":"lexer 原理解釋","categories":["cs"],"tags":["compiler","lexer","golang"]},"fields":{"slug":"/blog/2017/07/08/cs/lexer-explains/"}}},{"node":{"id":"e507df39-a49c-5c75-a4c4-507de675ce52","frontmatter":{"title":"ANTLR v4--introduction","categories":["cs"],"tags":["antlr4"]},"fields":{"slug":"/blog/2017/09/03/cs/introduction-of-antlr4/"}}},{"node":{"id":"5072ada0-29d8-500b-8371-f80533ab27b0","frontmatter":{"title":"Vim replace","categories":["cs"],"tags":["vim"]},"fields":{"slug":"/blog/2017/10/24/cs/vim-replace/"}}},{"node":{"id":"e34022aa-be3f-504a-9cc9-b222c3b6e52b","frontmatter":{"title":"Type driven development in C++","categories":["cs"],"tags":["cpp"]},"fields":{"slug":"/blog/2017/12/23/cs/type-driven-development-in-cpp/"}}},{"node":{"id":"d191956f-b5bb-5c3f-993a-eacec934f193","frontmatter":{"title":"llvm Go bindings","categories":["cs"],"tags":["llvm","golang"]},"fields":{"slug":"/blog/2017/12/04/cs/llvm-go-bindings/"}}},{"node":{"id":"28754ab9-bc87-5304-83d9-11586ee70fce","frontmatter":{"title":"C++ thread 基礎","categories":["cs"],"tags":["cpp","thread"]},"fields":{"slug":"/blog/2017/06/26/cs/cpp-thread-basic/"}}},{"node":{"id":"fd161ad4-402d-58bd-8190-08e44075694a","frontmatter":{"title":"Erlang Quick Start","categories":["cs"],"tags":["erlang"]},"fields":{"slug":"/blog/2018/01/05/cs/erlang-quick-start/"}}},{"node":{"id":"44c9e7e4-a19a-5f18-98f6-b6105e3ceb1c","frontmatter":{"title":"The best practice of Singleton in Golang","categories":["cs"],"tags":["golang","DesignPattern"]},"fields":{"slug":"/blog/2018/02/12/cs/singleton-best-practice-in-golang/"}}},{"node":{"id":"6cf1b36b-fed7-5566-84f6-64f596c0568f","frontmatter":{"title":"OpenCV introduction","categories":["cs"],"tags":["OpenCV","cpp"]},"fields":{"slug":"/blog/2018/02/08/cs/opencv-introduction/"}}},{"node":{"id":"08473604-caaf-538c-a9ac-633842a5eb3a","frontmatter":{"title":"You should know about `this`","categories":["cs"],"tags":["javascript"]},"fields":{"slug":"/blog/2018/02/09/cs/you-should-know-about-this/"}}},{"node":{"id":"a379d931-4a5a-50cf-b87a-29c36bf0bfca","frontmatter":{"title":"Sort by interface in Go","categories":["cs"],"tags":["golang"]},"fields":{"slug":"/blog/2018/02/14/cs/sort-by-interface-in-go/"}}},{"node":{"id":"7aadac41-a6ef-595c-adb3-fe7349045f54","frontmatter":{"title":"How to disable Go test caching","categories":["cs"],"tags":["golang"]},"fields":{"slug":"/blog/2018/03/17/cs/how-to-disable-go-test-caching/"}}},{"node":{"id":"b22b2e98-3a62-5e3a-b698-5b6521ea8c3f","frontmatter":{"title":"Introduction Of Char Recognizing -- Lexer Tech","categories":["cs"],"tags":["compiler","lexer","rust"]},"fields":{"slug":"/blog/2018/02/25/cs/introduction-of-char-recognizing-lexer-tech/"}}},{"node":{"id":"843f70c9-b9bc-52c0-920f-8ebec90635fe","frontmatter":{"title":"Create a WaitGroup by yourself","categories":["cs"],"tags":["golang","concurrency"]},"fields":{"slug":"/blog/2018/02/15/cs/create-a-wait-group-by-yourself-and-do-not-use-it/"}}},{"node":{"id":"49fd1e2e-1554-5d24-ae01-66e647e77df8","frontmatter":{"title":"Phoneix 安裝與啟動","categories":["cs"],"tags":["phoenix","elixir","web"]},"fields":{"slug":"/blog/2018/03/31/cs/phoenix-run-and-up/"}}},{"node":{"id":"c16962e8-fa69-54e8-bb2b-c781a2eabd46","frontmatter":{"title":"Nginx 安裝與啟動","categories":["cs"],"tags":["nginx","web"]},"fields":{"slug":"/blog/2018/04/02/cs/nginx-run-and-up/"}}},{"node":{"id":"67df5cf3-7b75-52a0-bf1b-0e9a81cb0cb0","frontmatter":{"title":"How to getting start with Rust","categories":["cs"],"tags":["rust"]},"fields":{"slug":"/blog/2018/05/26/cs/getting-start-with-rust/"}}},{"node":{"id":"c1666f78-5ad1-5fcc-9142-1f14a81b6079","frontmatter":{"title":"Go Channels 入門","categories":["cs"],"tags":["golang","concurrency"]},"fields":{"slug":"/blog/2018/04/23/cs/go-channel-introduction/"}}},{"node":{"id":"c8c71a5e-7c2f-5503-b2f1-ac0620db1157","frontmatter":{"title":"Design of Redux-go v2","categories":["cs"],"tags":["golang","redux"]},"fields":{"slug":"/blog/2018/05/17/cs/design-of-redux-go-v2/"}}},{"node":{"id":"765d1f5a-a9e2-5773-b81d-6fa2a465e86b","frontmatter":{"title":"Error is Value","categories":["cs"],"tags":["golang","errors"]},"fields":{"slug":"/blog/2018/06/22/cs/error-is-value/"}}},{"node":{"id":"5d5d1de0-f7e4-50de-a930-599e3cd895b3","frontmatter":{"title":"Some thinking from Elixir X Ruby Conf","categories":["cs"],"tags":["elixir"]},"fields":{"slug":"/blog/2018/05/01/cs/elixir-ruby-conf-2018-thinking/"}}},{"node":{"id":"ec13d746-3be7-5ec5-8cc2-9f5773c784ee","frontmatter":{"title":"Practical issue about DNS -- EDNS0","categories":["cs"],"tags":["networking","dns","golang"]},"fields":{"slug":"/blog/2018/08/07/cs/practical-issue-about-dns-edns0/"}}},{"node":{"id":"d6e6b1cc-7b50-59af-b3dd-1e2d1bd5fb5e","frontmatter":{"title":"Reflection in Go: create a stack[T]","categories":["cs"],"tags":["golang","reflection"]},"fields":{"slug":"/blog/2018/07/22/cs/reflection-in-go-create-a-stack-t/"}}},{"node":{"id":"a82969d9-e24d-5361-8fdf-797bd2415044","frontmatter":{"title":"gRPC quick start in Go","categories":["cs"],"tags":["networking","gRPC","golang"]},"fields":{"slug":"/blog/2018/08/16/cs/gRPC-basic-tutorial/"}}},{"node":{"id":"03ff243a-28ff-5c17-93bc-5acbf8aa87df","frontmatter":{"title":"Mark Sweep GC","categories":["cs"],"tags":["gc"]},"fields":{"slug":"/blog/2018/09/03/cs/mark-sweep/"}}},{"node":{"id":"b2e1114a-0574-582d-801f-ea4a99e96feb","frontmatter":{"title":"Use httpexpect to test server","categories":["cs"],"tags":["http","testing","networking","golang"]},"fields":{"slug":"/blog/2018/09/16/cs/httpexpect-go/"}}},{"node":{"id":"30f863fb-545c-5fdf-8fbe-bf908eb73753","frontmatter":{"title":"Go quick start","categories":["cs"],"tags":["golang"]},"fields":{"slug":"/blog/2018/09/23/cs/golang-quick-start/"}}},{"node":{"id":"9fd83d10-85ca-5ed3-9416-599e3d54d4c6","frontmatter":{"title":"Kubernetes 從 Pod 開始","categories":["cs"],"tags":["kubernetes"]},"fields":{"slug":"/blog/2018/10/27/cs/kubernetes-start-from-pod/"}}},{"node":{"id":"2d6b2494-ee64-5f20-a82a-f73f14882cee","frontmatter":{"title":"fun networking: tcp close","categories":["cs"],"tags":["workrecord","networking","tcp"]},"fields":{"slug":"/blog/2018/11/30/cs/fun-network-tcp-close/"}}},{"node":{"id":"b69e04f4-45ce-5dff-9a51-3fd54d7f2136","frontmatter":{"title":"XDP some note","categories":["cs"],"tags":["networking","xdp"]},"fields":{"slug":"/blog/2018/11/30/cs/xdp-some-note/"}}},{"node":{"id":"292b53ea-c5a7-551b-8607-b920c50d4c6e","frontmatter":{"title":"Test LLVM Go binding in travis","categories":["cs"],"tags":["llvm","golang","testing","travis"]},"fields":{"slug":"/blog/2018/10/06/cs/test-llvm-go-binding-in-travis/"}}},{"node":{"id":"092c8346-aeb9-5615-9d86-7d331ef2cace","frontmatter":{"title":"Kubernetes context","categories":["cs"],"tags":["kubernetes"]},"fields":{"slug":"/blog/2018/12/09/cs/kubernetes-context/"}}},{"node":{"id":"948da191-2170-532c-9e7a-61104f546f7a","frontmatter":{"title":"Testing in Go","categories":["cs"],"tags":["golang","testing","debug"]},"fields":{"slug":"/blog/2018/11/17/cs/testing-in-go/"}}},{"node":{"id":"6759bad6-0b3f-5a19-b865-ee89d50703b4","frontmatter":{"title":"Magic in redux-go v2.1: package rematch","categories":["cs"],"tags":["golang","redux"]},"fields":{"slug":"/blog/2018/07/04/cs/magic-in-redux-go-2.1/"}}},{"node":{"id":"f1b55b8d-f933-5627-8717-d62ef5dbe2f8","frontmatter":{"title":"戴德金分割與1為何等於0.9...(無限循環)","categories":["math"],"tags":["dedekind","dedekind cut"]},"fields":{"slug":"/blog/2019/03/01/math/dedekind-cut-and-application/"}}},{"node":{"id":"8de033ca-f3ad-5b21-b998-6f31085d5c9e","frontmatter":{"title":"Should I learn?","categories":["cs"],"tags":["career","life"]},"fields":{"slug":"/blog/2018/12/22/cs/should-i-learn/"}}},{"node":{"id":"cee81faa-22ef-5571-8540-e84fbfd9f710","frontmatter":{"title":"How to compare Go benchmark in TravisCI","categories":["cs"],"tags":["golang","testing","travis"]},"fields":{"slug":"/blog/2018/12/28/cs/golang-benchmark-compare/"}}},{"node":{"id":"05bd5f1b-bc76-5625-a764-e0d3c71b402f","frontmatter":{"title":"Make googletest-like test framework from scratch","categories":["cs"],"tags":["metaprogramming","cpp"]},"fields":{"slug":"/blog/2019/03/03/cs/make-googletest-like-test-framework-from-scratch/"}}},{"node":{"id":"0644a550-53f6-545c-9659-35a85d899494","frontmatter":{"title":"Introduction of LLDB","categories":["cs"],"tags":["tool","debugger","lldb"]},"fields":{"slug":"/blog/2019/03/17/cs/introduction-of-lldb/"}}},{"node":{"id":"9a3c9420-dd65-579b-bbe6-04cdd5654b91","frontmatter":{"title":"Write a hashmap in Go","categories":["cs"],"tags":["data-structure","golang"]},"fields":{"slug":"/blog/2019/04/04/cs/write-hashmap-in-go/"}}},{"node":{"id":"58d36ae9-d194-5fac-bc24-d0c9730866bf","frontmatter":{"title":"5 tools for file transfer","categories":["cs"],"tags":["tool"]},"fields":{"slug":"/blog/2019/04/27/cs/five-tools-for-file-transfer/"}}},{"node":{"id":"fd5f04d7-405c-5e7d-8ab6-3ccdc0bce760","frontmatter":{"title":"HugePages on Kubernetes","categories":["cs"],"tags":["workrecord","hugepages","kubernetes","linux"]},"fields":{"slug":"/blog/2019/05/04/cs/hugepages-on-kubernetes/"}}},{"node":{"id":"7755f76a-3458-5764-9f50-68c4ffb0a6c9","frontmatter":{"title":"gRPC proxy: approach & pain","categories":["cs"],"tags":["gRPC"]},"fields":{"slug":"/blog/2019/04/13/cs/grpc-proxy-approach-and-pain/"}}},{"node":{"id":"a74742e1-23ff-5977-bdfc-5f74842b234c","frontmatter":{"title":"A simple way to ensure interface won't be implemented accidently","categories":["cs"],"tags":["golang"]},"fields":{"slug":"/blog/2019/06/18/cs/simple-way-to-ensure-go-interface-wont-be-implement-accidently/"}}},{"node":{"id":"9c683f4e-7281-5153-a08a-a50b6ee05b88","frontmatter":{"title":"The Go concurrency bug I made","categories":["cs"],"tags":["golang","concurrency","workrecord"]},"fields":{"slug":"/blog/2019/05/25/cs/golang-concurrency-bug-i-made/"}}},{"node":{"id":"49d97e32-8a97-5e60-8c30-c78c403bba0d","frontmatter":{"title":"tcpdump cheat sheet","categories":["cs"],"tags":["tcpdump","networking"]},"fields":{"slug":"/blog/2019/06/25/cs/tcpdump-cheat-sheet/"}}},{"node":{"id":"bbf87cca-106e-5d96-a27d-a4f68a7cf012","frontmatter":{"title":"How trait with lifetime can be a trouble and how to fix it","categories":["cs"],"tags":["rust","rust lifetime"]},"fields":{"slug":"/blog/2019/07/31/cs/how-lifetime-trait-can-be-trouble-and-how-to-fix-it/"}}},{"node":{"id":"739889c2-58d8-5632-9bc4-1518751e52a6","frontmatter":{"title":"Notes: Ruby Conf Taiwan 2019","categories":["cs"],"tags":["language","gc"]},"fields":{"slug":"/blog/2019/08/13/cs/ruby-conf-taiwan-2019/"}}},{"node":{"id":"ad56e808-8f85-55ad-9aa7-34f5336e6d4a","frontmatter":{"title":"Privileged Pod -- Debug kubernetes node","categories":["cs"],"tags":["kubernetes","debug"]},"fields":{"slug":"/blog/2019/09/01/cs/privileged-pod/"}}},{"node":{"id":"4e62b250-d25f-5c39-bd18-2d5b3514461b","frontmatter":{"title":"cgo can be a trouble","categories":["cs"],"tags":["golang","cgo"]},"fields":{"slug":"/blog/2019/08/15/cs/cgo-can-be-a-trouble/"}}},{"node":{"id":"c21bfb9e-3ed2-5312-8652-c28945f78f52","frontmatter":{"title":"Why not a big script","categories":["cs"],"tags":["shell"]},"fields":{"slug":"/blog/2019/10/05/cs/why-not-big-script/"}}},{"node":{"id":"10eb1882-d25b-532e-90b3-ba31c0ae4de0","frontmatter":{"title":"nix report","categories":["cs"],"tags":["nix","shell"]},"fields":{"slug":"/blog/2019/09/12/cs/nix-report/"}}},{"node":{"id":"778b403e-0913-55b6-8631-8f709c3190a4","frontmatter":{"title":"DPDK -- EAL Input/output error","categories":["cs"],"tags":["dpdk","networking","workrecord"]},"fields":{"slug":"/blog/2019/10/18/cs/dpdk-input-output-error/"}}},{"node":{"id":"d1844995-f98a-582d-8034-1261c2538134","frontmatter":{"title":"How to use .gitignore","categories":["cs"],"tags":["git"]},"fields":{"slug":"/blog/2019/11/08/cs/how-to-use-gitignore/"}}},{"node":{"id":"af72f2b3-cd09-547a-bce0-9cfef54189d7","frontmatter":{"title":"DPDK usertools: devbind","categories":["cs"],"tags":["dpdk","networking","workrecord"]},"fields":{"slug":"/blog/2019/10/19/cs/dpdk-usertools-devbind/"}}},{"node":{"id":"55cd1966-fe9a-5d8e-a7bc-613b82ea53cc","frontmatter":{"title":"Weird behavior in Go: encoding/gob","categories":["cs"],"tags":["gob","golang","workrecord"]},"fields":{"slug":"/blog/2019/10/31/cs/weird-behavior-gob/"}}},{"node":{"id":"95cd04e7-3518-5f09-bc15-b481e5502ab8","frontmatter":{"title":"Algebra data type vs Class","categories":["cs"],"tags":["plt","scala","haskell"]},"fields":{"slug":"/blog/2019/11/19/cs/algebra-data-type-vs-class/"}}},{"node":{"id":"e7effcba-43fa-55a2-a9a4-3ae56227bb4d","frontmatter":{"title":"Reflection on Working effectively with legacy code --- Part I","categories":["cs"],"tags":["programming","testing"]},"fields":{"slug":"/blog/2019/11/24/cs/reflection-on-working-effectively-with-legacy-code-part-one/"}}},{"node":{"id":"9f3948b2-bb63-5a4f-9c9c-0a1fadfc3517","frontmatter":{"title":"Mergeable replicated data types","categories":["cs"],"tags":["paper","data-structure"]},"fields":{"slug":"/blog/2019/11/30/cs/mergeable-replicated-data-types/"}}},{"node":{"id":"f12f1f8a-6de2-51da-8f8a-d323a92b3549","frontmatter":{"title":"Infinite Type","categories":["cs"],"tags":["plt","language"]},"fields":{"slug":"/blog/2019/12/08/cs/infinite-type/"}}},{"node":{"id":"a2137fb4-59cf-577d-b07f-a829d4f6882c","frontmatter":{"title":"How to test in Haskell: HSpec setup","categories":["cs"],"tags":["haskell","beginner","testing"]},"fields":{"slug":"/blog/2019/12/14/cs/how-to-test-haskell/"}}},{"node":{"id":"5e569bcc-7ad2-5200-921e-a0ce3b17a773","frontmatter":{"title":"NOTE: If we write kubernetes client in Rust","categories":["cs"],"tags":["note","programming","kubernetes","rust"]},"fields":{"slug":"/blog/2019/12/13/cs/if-write-kube-client-go-in-rust/"}}},{"node":{"id":"06cc88f1-000b-506b-8afb-0ba5409f5da1","frontmatter":{"title":"Haskell quick start","categories":["cs"],"tags":["haskell","beginner","plt","language"]},"fields":{"slug":"/blog/2019/12/08/cs/haskell-quick-start/"}}},{"node":{"id":"785de266-a84d-57e3-b119-46a5f7e0114a","frontmatter":{"title":"NOTE: get labels from Pod","categories":["cs"],"tags":["note","kubernetes"]},"fields":{"slug":"/blog/2019/12/20/cs/note-get-labels-from-pod/"}}},{"node":{"id":"846c66d5-4f4a-5544-9491-fdc1671be380","frontmatter":{"title":"From Infinite Type to Functor","categories":["cs"],"tags":["plt","functor","language","haskell"]},"fields":{"slug":"/blog/2019/12/13/cs/from-infinite-type-to-functor/"}}},{"node":{"id":"d4e2efd2-4da2-54dd-9e46-544abf0f1953","frontmatter":{"title":"NOTE: What is lambda calculus","categories":["cs"],"tags":["note","plt","utlc"]},"fields":{"slug":"/blog/2020/01/01/cs/note-what-is-lambda-calculus/"}}},{"node":{"id":"0bbd48f9-b7ac-5fbe-85f5-19ca3fa12734","frontmatter":{"title":"Type as Constraint: Why we need more type?","categories":["cs"],"tags":["plt","language"]},"fields":{"slug":"/blog/2020/01/16/cs/type-as-constraint-why-we-need-more-type/"}}},{"node":{"id":"bce44484-82be-5531-bbc8-a9e1bc59076c","frontmatter":{"title":"Reflection on Working effectively with legacy code --- chapter 11 to 19","categories":["cs"],"tags":["programming","testing"]},"fields":{"slug":"/blog/2020/01/03/cs/reflection-on-working-effectively-with-legacy-code-ch-11-19/"}}},{"node":{"id":"d74e85e7-1028-51d0-add9-0c0ea37c4cb6","frontmatter":{"title":"TDD is not silver bullet","categories":["cs"],"tags":["programming"]},"fields":{"slug":"/blog/2020/01/11/cs/tdd-is-not-silver-bullet/"}}},{"node":{"id":"de3bd99a-2f0c-5473-a853-21523d01dbb5","frontmatter":{"title":"Reflection on Working effectively with legacy code --- chapter 20 to 23","categories":["cs"],"tags":["programming","testing"]},"fields":{"slug":"/blog/2020/01/04/cs/reflection-on-working-effectively-with-legacy-code-ch-20-23/"}}},{"node":{"id":"44eb6dda-c3e9-54fb-a251-b415fb08b49f","frontmatter":{"title":"NOTE: a little bit Z3 solver","categories":["cs"],"tags":["note","smt","z3"]},"fields":{"slug":"/blog/2020/01/24/cs/note-a-little-bit-z3-solver/"}}},{"node":{"id":"f4cd1802-ad9e-5d80-81f0-79f85515f2cd","frontmatter":{"title":"NOTE: bounded polymorphism","categories":["cs"],"tags":["note","plt","language","haskell"]},"fields":{"slug":"/blog/2020/01/24/cs/note-bound-polymorphism/"}}},{"node":{"id":"2a3dbf6d-50c5-5b0e-b4c2-4890cfc650a0","frontmatter":{"title":"NOTE: C++ optional","categories":["cs"],"tags":["note","cpp","language"]},"fields":{"slug":"/blog/2020/01/26/cs/note-cpp-optional/"}}},{"node":{"id":"ec5fd544-7096-5098-89a6-0f06a873d47e","frontmatter":{"title":"不會騎 Gogoro 的兩個鄉巴佬","categories":["funny"],"tags":["life"]},"fields":{"slug":"/blog/2020/01/31/funny/two-idiots-who-cant-ride-gogoro/"}}},{"node":{"id":"e5f1b03a-f5cd-5b9b-aa1f-499ea2076fac","frontmatter":{"title":"一些推薦去嘗試看看的程式語言","categories":["cs"],"tags":["language"]},"fields":{"slug":"/blog/2020/02/06/cs/suggested-languages/"}}},{"node":{"id":"10e9c6f2-3474-5ebc-99d2-5c4a97f879ea","frontmatter":{"title":"Binary Encoding of Integer","categories":["cs"],"tags":["fundamental"]},"fields":{"slug":"/blog/2020/03/21/cs/binary-encoding-of-interger/"}}},{"node":{"id":"e2302e39-eea1-5df3-90a6-ef060120cf9e","frontmatter":{"title":"小說推薦：天防者","categories":["book"],"tags":["novel","recommend","skyward","Brandon Sanderson"]},"fields":{"slug":"/blog/2020/04/01/book/recommend-novel-skyward/"}}},{"node":{"id":"ed391a8d-358b-56e3-b55c-f0fd90492aa8","frontmatter":{"title":"NOTE: Seven Bridges of Königsberg and Eulerian graph","categories":["math"],"tags":["note","topology","graph","Eulerian path","Eulerian circuit"]},"fields":{"slug":"/blog/2020/04/03/math/note-seven-bridges-of-konigsberg-eulerian-path/"}}},{"node":{"id":"80d44a1a-1a60-5d93-bf71-d21cbe6d796c","frontmatter":{"title":"NOTE: class member initialization order in C++","categories":["cs"],"tags":["note","cpp","class member","initialization","language"]},"fields":{"slug":"/blog/2020/04/13/cs/note-cpp-member-initialize-order/"}}},{"node":{"id":"757f6fbc-6d36-5b3f-989e-ef792d13aa7e","frontmatter":{"title":"NOTE: simply typed lambda calculus","categories":["cs"],"tags":["note","plt","stlc"]},"fields":{"slug":"/blog/2020/03/08/cs/note-stlc/"}}},{"node":{"id":"047ac64e-b55c-5043-adae-1d5c9321c5cd","frontmatter":{"title":"NOTE: how to install Nix package manager on MacOS Catalina","categories":["cs"],"tags":["note","nix","macos","catalina"]},"fields":{"slug":"/blog/2020/04/17/cs/note-how-to-install-nix-on-macos-catalina/"}}},{"node":{"id":"bc080f44-1eaf-5efd-a61a-ff3f1da28b84","frontmatter":{"title":"From Functor to Applicative","categories":["cs"],"tags":["plt","applicative","language","haskell"]},"fields":{"slug":"/blog/2020/04/11/cs/from-functor-to-applicative/"}}},{"node":{"id":"c6c52b5a-8170-508f-b887-6b1ce2f6ecda","frontmatter":{"title":"How to parse expression with the parser combinator","categories":["cs"],"tags":["compiler","parser","racket"]},"fields":{"slug":"/blog/2020/05/03/cs/how-to-parse-expression-with-parser-combinator/"}}},{"node":{"id":"eff65ed1-fdb8-5069-919f-3983784e1344","frontmatter":{"title":"A beautiful proof: There have infinite primes","categories":["math"],"tags":["prime"]},"fields":{"slug":"/blog/2020/05/09/math/a-beautiful-proof-there-have-infinite-primes/"}}},{"node":{"id":"a30fc310-d412-5f36-95c3-0aee1ea000ae","frontmatter":{"title":"奶油白醬義大利麵","categories":["recipe"],"tags":["spaghetti","white sauce"]},"fields":{"slug":"/blog/2020/05/10/recipe/spaghetti/"}}},{"node":{"id":"0ad29589-2261-5f8f-a0f6-0ef61d5a4833","frontmatter":{"title":"NOTE: 演算法的各種時間複雜度","categories":["cs"],"tags":["note","algorithm","time complexity"]},"fields":{"slug":"/blog/2020/05/12/cs/algorithm-time-complexity/"}}},{"node":{"id":"4bc528e2-46d3-5ff9-9ef6-cd2036d9d741","frontmatter":{"title":"NOTE: 樸素集合論三大悖論","categories":["math"],"tags":["note","set theory","paradox","type theory"]},"fields":{"slug":"/blog/2020/05/31/math/set-theory-three-paradox/"}}},{"node":{"id":"67ccc98d-872a-548d-bec9-c1edd2297252","frontmatter":{"title":"Currying","categories":["cs"],"tags":["racket","macro"]},"fields":{"slug":"/blog/2020/05/31/cs/currying/"}}},{"node":{"id":"d29c9aa1-2b7f-531a-868a-ccdca6371411","frontmatter":{"title":"De Bruijn index: why and how","categories":["cs"],"tags":["plt","de bruijn index","racket"]},"fields":{"slug":"/blog/2020/05/16/cs/de-bruijn-index/"}}},{"node":{"id":"203837be-04fc-567d-9450-33a3f6b02872","frontmatter":{"title":"NOTE: ZFC","categories":["math"],"tags":["note","set theory"]},"fields":{"slug":"/blog/2020/06/11/math/note-zfc/"}}},{"node":{"id":"29b4fcc7-cbe5-57fd-a9c5-7a18c62d8ee6","frontmatter":{"title":"正確實作 substitution 有多難","categories":["cs"],"tags":["plt","utlc"]},"fields":{"slug":"/blog/2020/06/04/cs/how-hard-can-implement-substitution-correctly-be/"}}},{"node":{"id":"c6c0c8c1-db91-54c9-8929-78658c2a90dd","frontmatter":{"title":"NOTE: lambda 2","categories":["cs"],"tags":["note","plt","lambda 2"]},"fields":{"slug":"/blog/2020/06/12/cs/second-order-typed-lambda-calculus/"}}},{"node":{"id":"f49e05b7-906e-5dca-87d5-2a3d39e773db","frontmatter":{"title":"大阪燒","categories":["recipe"],"tags":["okonomiyaki"]},"fields":{"slug":"/blog/2020/06/17/recipe/recipe-okonomiyaki/"}}},{"node":{"id":"b8aae0b8-d789-57eb-b671-75bfa2f4290d","frontmatter":{"title":"NOTE: 演算法的量級","categories":["cs"],"tags":["note","algorithm","order"]},"fields":{"slug":"/blog/2020/06/20/cs/algorithm-order/"}}},{"node":{"id":"a3447c9d-20fc-58e9-a993-f25b1f2b0d8a","frontmatter":{"title":"Extension hack","categories":["cs"],"tags":["swift","extension"]},"fields":{"slug":"/blog/2017/09/29/cs/extension-hack/"}}},{"node":{"id":"8dce6fe3-902a-5b3d-9d14-2e302cf0bef5","frontmatter":{"title":"小說推薦：優質國度","categories":["book"],"tags":["novel","recommend","Quality Land"]},"fields":{"slug":"/blog/2020/07/03/book/recommend-novel-quality-land/"}}},{"node":{"id":"3c3130a0-7b7a-5b3f-9f3c-9a23ed88cc72","frontmatter":{"title":"Swift --extension概念入門","categories":["cs"],"tags":["swift","extension"]},"fields":{"slug":"/blog/2017/09/29/cs/swift-extension/"}}},{"node":{"id":"97bb49ed-2ce6-588c-bd14-86dcecaa2116","frontmatter":{"title":"NOTE: Algebra Structure","categories":["math"],"tags":["note","algebra structure","magma","semigroup","monoid","group"]},"fields":{"slug":"/blog/2020/07/12/math/algebra-structure/"}}},{"node":{"id":"ab571f39-a304-515c-9e56-c4bdc3a1d70b","frontmatter":{"title":"Why Logic Programming?","categories":["cs"],"tags":["logic programming","racket","rosette","datalog"]},"fields":{"slug":"/blog/2020/07/15/cs/why-logic-programming/"}}},{"node":{"id":"13404fcc-084f-5f56-8938-c72eb8e96c94","frontmatter":{"title":"Tracing source code of Kubernetes client-go","categories":["cs"],"tags":["kubernetes","golang"]},"fields":{"slug":"/blog/2019/01/25/cs/kube-client-go-source-code-tracing/"}}},{"node":{"id":"602307b1-7619-55ee-91f4-b488361ff1fd","frontmatter":{"title":"程式設計思考（一）核心領域","categories":["cs"],"tags":["programming","beginner","racket"]},"fields":{"slug":"/blog/2019/11/09/cs/abstraction-of-programming-design/"}}},{"node":{"id":"b88e5107-daac-51de-aace-b9d13d01c5d1","frontmatter":{"title":"Reflection on Working effectively with legacy code --- chapter 6 to 10","categories":["cs"],"tags":["programming","testing"]},"fields":{"slug":"/blog/2019/12/07/cs/reflection-on-working-effectively-with-legacy-code-ch-6-10/"}}},{"node":{"id":"45c7c10b-ebe7-5f8a-9bb8-8384c90744cf","frontmatter":{"title":"Interaction with C in Zig","categories":["cs"],"tags":["zig","c","language"]},"fields":{"slug":"/blog/2019/12/22/cs/interaction-with-c-in-zig/"}}},{"node":{"id":"24cddb21-779c-545e-aff0-dd840418c8d2","frontmatter":{"title":"最後一次抱怨 Go","categories":["cs"],"tags":["golang","language"]},"fields":{"slug":"/blog/2020/01/19/cs/last-time-complain-about-go/"}}},{"node":{"id":"460001d0-2e11-586f-a331-e7294c963060","frontmatter":{"title":"A Racket macro tutorial -- get HTTP parameters easier","categories":["cs"],"tags":["racket","metaprogramming","macro"]},"fields":{"slug":"/blog/2020/02/16/cs/a-racket-macro-tutorial-get-http-parameters-easier/"}}},{"node":{"id":"d0e1e323-7ade-5a75-8c86-dbfd7f94861b","frontmatter":{"title":"Programming 生涯回顧","categories":["cs"],"tags":["career","life"]},"fields":{"slug":"/blog/2020/05/13/cs/programming-life-retro/"}}},{"node":{"id":"2a45e9d5-898d-59d4-84d4-f96458edfd2e","frontmatter":{"title":"程式設計思考（二）操作介面","categories":["cs"],"tags":["programming","beginner","racket"]},"fields":{"slug":"/blog/2020/04/25/cs/abstraction-of-programming-design-2-user-interface/"}}},{"node":{"id":"c029b0a3-b626-5758-b8e5-b6a38c781376","frontmatter":{"title":"Kubernetes Networking: concept and overview from underlying perspective","categories":["cs"],"tags":["networking","kubernetes","linux"]},"fields":{"slug":"/blog/2019/05/18/cs/kubernetes-networking-concept-and-overview/"}}},{"node":{"id":"b9b6191e-1aa2-557b-9cbc-fcf4f689fe93","frontmatter":{"title":"Hindley-Milner type system: Incrementally build way & Make new language in Racket","categories":["cs"],"tags":["plt","hindley milner","racket"]},"fields":{"slug":"/blog/2020/05/24/cs/hindley-milner-system-incremental-build-and-make-new-language/"}}}]}},"pageContext":{"slug":"/blog/2018/10/27/cs/kubernetes-start-from-pod/"}}}