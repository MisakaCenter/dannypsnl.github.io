{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2018/09/cs/httpexpect-go/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://dannypsnl.github.io"}},"markdownRemark":{"html":"<p>Use builtin functionality to test a Go server is a panicful experience.\nThe problem is because we have to handle too many error and get so much thing we aren't always need.</p>\n<p>Of course, we will create a abstraction to reduce this panic.\nBut if we already have a mature solution? That is <a href=\"https://github.com/gavv/httpexpect\">httpexpect</a></p>\n<p>We have two options about import:</p>\n<ul>\n<li><code class=\"language-text\">import &quot;github.com/gavv/httpexpect.v1&quot;</code></li>\n<li><code class=\"language-text\">import &quot;github.com/gavv/httpexpect&quot;</code></li>\n</ul>\n<p>The different is <code class=\"language-text\">v1</code> is stable branch, another is <code class=\"language-text\">master</code> branch on github.</p>\n<p>I suggest pick stable one for company project, but it's fine to use <code class=\"language-text\">master</code> branch at side project.</p>\n<p><code class=\"language-text\">httpexpect</code> works pretty good with <code class=\"language-text\">httptest</code>. A simple example:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> fakeHandler <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>fakeHandler<span class=\"token punctuation\">)</span> <span class=\"token function\">ServeHTTP</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprint</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">TestIt</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\thandler <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>fakeHandler<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\tserver <span class=\"token operator\">:=</span> httptest<span class=\"token punctuation\">.</span><span class=\"token function\">NewServer</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">defer</span> server<span class=\"token punctuation\">.</span><span class=\"token function\">Close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\te <span class=\"token operator\">:=</span> httpexpect<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> server<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">)</span>\n\n\te<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t\t<span class=\"token function\">Expect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t\t<span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t\t<span class=\"token function\">Body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Equal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>How about add form value?</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">e<span class=\"token punctuation\">.</span><span class=\"token function\">PATCH</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/test/patch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithFormField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"value\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"patch\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token function\">Expect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token function\">Body</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Equal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"patch\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>JSON response?</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">e<span class=\"token punctuation\">.</span><span class=\"token function\">POST</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/post\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token function\">Expect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token function\">ContentType</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"application/json\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token function\">JSON</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Equal</span><span class=\"token punctuation\">(</span>expected<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Query?</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">e<span class=\"token punctuation\">.</span><span class=\"token function\">GET</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/user\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">WithQuery</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"name\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Danny\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token function\">Expect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Status</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusOK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Hope you would feel happy with this little introduction.</p>","frontmatter":{"title":"Use httpexpect to test server","categories":["cs"],"tags":["http","testing","networking","golang"]}}},"pageContext":{"slug":"/blog/2018/09/cs/httpexpect-go/"}}}