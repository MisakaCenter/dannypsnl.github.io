{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/cs/test-llvm-go-binding-in-travis/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://dannypsnl.github.io"}},"markdownRemark":{"html":"<p>Basically, the problem is because I use Go binding of LLVM, then it hard to use preinstalled LLVM.</p>\n<p>This article is about how I solve the problem step by step.</p>\n<p>First we need to install dependencies by apt-get(travis use ubuntu 14.04 if you do not spec anything)</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">dist</span><span class=\"token punctuation\">:</span> trusty\n<span class=\"token key atrule\">addons</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apt</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">sources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ubuntu<span class=\"token punctuation\">-</span>toolchain<span class=\"token punctuation\">-</span>r<span class=\"token punctuation\">-</span>test\n      <span class=\"token punctuation\">-</span> llvm<span class=\"token punctuation\">-</span>toolchain<span class=\"token punctuation\">-</span>trusty\n    <span class=\"token key atrule\">packages</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> g++<span class=\"token punctuation\">-</span><span class=\"token number\">4.9</span>\n      <span class=\"token punctuation\">-</span> clang<span class=\"token punctuation\">-</span><span class=\"token number\">8</span>\n      <span class=\"token punctuation\">-</span> clang<span class=\"token punctuation\">-</span>tools<span class=\"token punctuation\">-</span><span class=\"token number\">8</span>\n      <span class=\"token punctuation\">-</span> libclang<span class=\"token punctuation\">-</span>common<span class=\"token punctuation\">-</span>8<span class=\"token punctuation\">-</span>dev\n      <span class=\"token punctuation\">-</span> libclang<span class=\"token punctuation\">-</span>8<span class=\"token punctuation\">-</span>dev\n      <span class=\"token punctuation\">-</span> libclang1<span class=\"token punctuation\">-</span><span class=\"token number\">8</span>\n      <span class=\"token punctuation\">-</span> libllvm8\n      <span class=\"token punctuation\">-</span> llvm<span class=\"token punctuation\">-</span><span class=\"token number\">8</span>\n      <span class=\"token punctuation\">-</span> llvm<span class=\"token punctuation\">-</span>8<span class=\"token punctuation\">-</span>dev\n      <span class=\"token punctuation\">-</span> llvm<span class=\"token punctuation\">-</span>8<span class=\"token punctuation\">-</span>runtime\n      <span class=\"token punctuation\">-</span> libfuzzer<span class=\"token punctuation\">-</span>8<span class=\"token punctuation\">-</span>dev\n      <span class=\"token punctuation\">-</span> lldb<span class=\"token punctuation\">-</span><span class=\"token number\">8</span>\n      <span class=\"token punctuation\">-</span> lld<span class=\"token punctuation\">-</span><span class=\"token number\">8</span></code></pre></div>\n<p>Now we get LLVM 8 on Travis.</p>\n<p>Then we need to setup environment variables:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> CC=clang<span class=\"token punctuation\">-</span>8 CGO_CXXFLAGS=<span class=\"token punctuation\">-</span>std=c++11 CGO_LDFLAGS_ALLOW='Wl<span class=\"token punctuation\">,</span>(search_paths_first<span class=\"token punctuation\">|</span>headerpad_max_install_names)' CGO_CPPFLAGS=\"`llvm<span class=\"token punctuation\">-</span>config<span class=\"token punctuation\">-</span>8 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>cppflags`\" CGO_LDFLAGS=\"`llvm<span class=\"token punctuation\">-</span>config<span class=\"token punctuation\">-</span>8 <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>ldflags <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>libs <span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span>system<span class=\"token punctuation\">-</span>libs all`\"</code></pre></div>\n<p><code class=\"language-text\">llvm-config</code> is a helper tool of LLVM that would generate the meta data for your program, e.g. <code class=\"language-text\">llvm-config --cppflags</code> contains include path to installed headers path of LLVM.</p>\n<p>At here the suffix <code class=\"language-text\">-8</code> is because it installed like that.</p>\n<p>But if you compile your Go binding now, you would get some what <code class=\"language-text\">run_build_sh</code> is undefined.</p>\n<p>This is because at <code class=\"language-text\">llvm.org/llvm/bindings/go/llvm/llvm_dep.go</code> contains a type check bound to make sure type <code class=\"language-text\">run_build_sh</code> generated.\nIt can only be generated by run <code class=\"language-text\">llvm.org/llvm/bindings/go/build.sh</code></p>\n<p>But if we dig into build flow, we will find <code class=\"language-text\">llvm.org/llvm/tools/llvm-go/llvm-go.go</code> generated the thing!\nIt works like:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">go build <span class=\"token variable\">$GOPATH</span>/src/llvm.org/llvm/tools/llvm-go/llvm-go.go\n./llvm-go print-config <span class=\"token variable\">$GOPATH</span>/src/llvm.org/llvm/bindings/go/llvm/llvm_config.go</code></pre></div>\n<p>Now we can work with latest version of LLVM basically, but if you install some older LLVM in your machine, it won't compile!</p>\n<p>Because Go binding would expect some variable, but C didn't have one(old version).</p>\n<p>The solution is go to <a href=\"http://releases.llvm.org\">http://releases.llvm.org</a> to download spec version(should be the same as installed in your system) to get binding source.</p>\n<p>Use LLVM 6.0 to be example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir -p $GOPATH/src/llvm.org &amp;&amp; cd $GOPATH/src/llvm.org\ncurl -XGET http://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz &gt;&gt; llvm.tar.xz\ntar -xf llvm.tar.xz\nmv llvm-6.0.0.src llvm</code></pre></div>\n<p>Now, you can test your code by preinstalled LLVM!</p>","frontmatter":{"title":"Test LLVM Go binding in travis","categories":["cs"],"tags":["llvm","golang","testing","travis"]}}},"pageContext":{"slug":"/blog/cs/test-llvm-go-binding-in-travis/"}}}