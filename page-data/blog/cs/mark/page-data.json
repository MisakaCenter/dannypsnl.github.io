{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/cs/mark/","result":{"data":{"markdownRemark":{"html":"<p>Mark-Sweep is a classic GC algorithm, it's combined with two parts, <code>mark</code> and <code>sweep</code>.</p>\n<p>Mark pseudo code would like:</p>\n<pre><code>mark(root):\n    if !root.is_marked:\n        root.is_marked = true\n    for obj in root.knowns:\n        mark(obj)\n</code></pre>\n<p>And Sweep pseudo code would like:</p>\n<pre><code>sweep(heap):\n    for obj in heap:\n        if obj.is_marked:\n            obj.is_marked = false\n        else:\n            release(obj)\n</code></pre>\n<p>Let's use some graphs to show it(<code>-></code> means known):</p>\n<p>Start:</p>\n<pre><code>root -> obj1 -> obj2\n         |\n          \\-> obj3\n</code></pre>\n<p>If we run <code>collection</code>(mark-sweep), then since each object is reachable from <code>root</code>, so no one would be released.</p>\n<p>After running a function, <code>obj1</code> don't need <code>obj3</code> anymore, so it became:</p>\n<pre><code>root -> obj1 -> obj2\n\nobj3\n</code></pre>\n<p>Now when we run <code>collection</code>, <code>obj3</code> is unreachable from <code>root</code>, so it won't be marked! When running to <code>sweep</code>, it will be dropped.</p>","frontmatter":{"title":"Mark Sweep GC"}}},"pageContext":{"slug":"/blog/cs/mark/"}}}