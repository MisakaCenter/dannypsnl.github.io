{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/cs/tcpdump-cheat/","result":{"data":{"markdownRemark":{"html":"<p>tcpdump?</p>\n<p>A command line tool for analyzing network packets.</p>\n<p>How to get packets?</p>\n<p>Using <code>-i</code> option, <code>tcpdump -i &#x3C;device-name></code>, you would get the packet through NIC(network interface card) named <device-name>.</device-name></p>\n<p>How to get <code>&#x3C;device-name></code>?</p>\n<p>using <code>ip link</code> could get some, e.g.</p>\n<pre><code>$ ip link\n1: lo: &#x3C;LOOPBACK,UP,LOWER_UP> mtu 16436 qdisc noqueue state UNKNOWN\n    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00\n2: eth0: &#x3C;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP qlen 1000\n    link/ether 08:01:37:d1:9c:bd brd ff:ff:ff:ff:ff:ff\n$ tcpdump -i eth0\n</code></pre>\n<p>Now I know how to get all packets through certain NIC, but I want to analysis specify connections, how can I get it?</p>\n<p>Expression.</p>\n<p>What Expression?</p>\n<p>tcpdump expression.</p>\n<p>What is tcpdump expression?</p>\n<p>A set of combinable rules, for example <code>src 10.0.0.10</code> means only the packets from <code>10.0.0.10</code> would show.Here is a list(incomplete) of tcpdump expression, the <code>#</code> leading comments:</p>\n<pre><code>host 10.0.0.10 # from or to 10.0.0.10\nport 23 # contains port 23\ndst 10.0.0.10 # as src, but for destination\n# Protocols\narp # only ARP\nicmp\ntcp\nudp\nfddi\nether\n# Protocol logic is simple, is not, for all\n</code></pre>\n<p>You say they are combinable, how they combined?</p>\n<p>Good question, they can be combined with <code>or</code>, <code>and</code> or with leading <code>!</code>(not); <code>or</code> is <code>or</code>, not <code>and</code>, for example, <code>src 10.0.0.10 or src 10.0.0.11</code> is for packets from <code>10.0.0.10</code> or <code>10.0.0.11</code>, obviously.</p>\n<p>I found packets not showing all informations I want, what could I do?</p>\n<p>Simple, tcpdump has <code>-v</code> for verbose output, <code>-vv</code> for more verbose, <code>-vvv</code> for even more verbose. <code>-vvvv</code> for… no, I’m kidding.</p>\n<p>Ha, that’s funny, and the timestamp is not readable for me, how to make it more friendly?</p>\n<p>Use <code>-t</code>, and not kidding, use <code>-ttttt</code> for maximally timestamp, and you have <code>-kt, k &#x3C;- 1..=5</code> for different level output.</p>\n<p>I found the IP be replaced by host name but I don’t want it, how to remove it?</p>\n<p><code>-n</code> would tell <code>tcpdump</code> stop convert address.</p>\n<p>What if I want to save my hard working result?</p>\n<p><code>-w &#x3C;filename></code> is what you’re looking for, it would write the raw packets to file named <code>&#x3C;filename></code> rather than parsing &#x26; printing. And remember you can record packets into a file, and use <strong><a href=\"https://www.wireshark.org/download.html\">Wireshark</a></strong> to analysis it! For complex flow analyzing, I would do that. Now, the most important path already covered, you can always get more &#x26; fresher information about it from <code>manpage</code> of <code>tcpdump</code>, good lucks.</p>\n<h4>references</h4>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Network_interface_controller\">wiki: NIC</a></li>\n<li><a href=\"https://www.tcpdump.org/manpages/tcpdump.1.html\">man: tcpdump</a></li>\n</ul>","frontmatter":{"title":"tcpdump cheat sheet"}}},"pageContext":{"slug":"/blog/cs/tcpdump-cheat/"}}}