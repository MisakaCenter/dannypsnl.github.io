{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/cs/test-llvm-go-binding-in/","result":{"data":{"markdownRemark":{"html":"<p>Basically, the problem is because I use Go binding of LLVM, then it hard to use preinstalled LLVM.</p>\n<p>This article is about how I solve the problem step by step.</p>\n<p>First we need to install dependencies by apt-get(travis use ubuntu 14.04 if you do not spec anything)</p>\n<pre><code class=\"language-yaml\">dist: trusty\naddons:\n  apt:\n    sources:\n      - ubuntu-toolchain-r-test\n      - llvm-toolchain-trusty\n    packages:\n      - g++-4.9\n      - clang-8\n      - clang-tools-8\n      - libclang-common-8-dev\n      - libclang-8-dev\n      - libclang1-8\n      - libllvm8\n      - llvm-8\n      - llvm-8-dev\n      - llvm-8-runtime\n      - libfuzzer-8-dev\n      - lldb-8\n      - lld-8\n</code></pre>\n<p>Now we get LLVM 8 on Travis.</p>\n<p>Then we need to setup environment variables:</p>\n<pre><code class=\"language-yaml\">env:\n  - CC=clang-8 CGO_CXXFLAGS=-std=c++11 CGO_LDFLAGS_ALLOW='Wl,(search_paths_first|headerpad_max_install_names)' CGO_CPPFLAGS=\"`llvm-config-8 --cppflags`\" CGO_LDFLAGS=\"`llvm-config-8 --ldflags --libs --system-libs all`\"\n</code></pre>\n<p><code>llvm-config</code> is a helper tool of LLVM that would generate the meta data for your program, e.g. <code>llvm-config --cppflags</code> contains include path to installed headers path of LLVM.</p>\n<p>At here the suffix <code>-8</code> is because it installed like that.</p>\n<p>But if you compile your Go binding now, you would get some what <code>run_build_sh</code> is undefined.</p>\n<p>This is because at <code>llvm.org/llvm/bindings/go/llvm/llvm_dep.go</code> contains a type check bound to make sure type <code>run_build_sh</code> generated.\nIt can only be generated by run <code>llvm.org/llvm/bindings/go/build.sh</code></p>\n<p>But if we dig into build flow, we will find <code>llvm.org/llvm/tools/llvm-go/llvm-go.go</code> generated the thing!\nIt works like:</p>\n<pre><code class=\"language-bash\">go build $GOPATH/src/llvm.org/llvm/tools/llvm-go/llvm-go.go\n./llvm-go print-config $GOPATH/src/llvm.org/llvm/bindings/go/llvm/llvm_config.go\n</code></pre>\n<p>Now we can work with latest version of LLVM basically, but if you install some older LLVM in your machine, it won't compile!</p>\n<p>Because Go binding would expect some variable, but C didn't have one(old version).</p>\n<p>The solution is go to <a href=\"http://releases.llvm.org\">http://releases.llvm.org</a> to download spec version(should be the same as installed in your system) to get binding source.</p>\n<p>Use LLVM 6.0 to be example:</p>\n<pre><code>mkdir -p $GOPATH/src/llvm.org &#x26;&#x26; cd $GOPATH/src/llvm.org\ncurl -XGET http://releases.llvm.org/6.0.0/llvm-6.0.0.src.tar.xz >> llvm.tar.xz\ntar -xf llvm.tar.xz\nmv llvm-6.0.0.src llvm\n</code></pre>\n<p>Now, you can test your code by preinstalled LLVM!</p>","frontmatter":{"title":"Test LLVM Go binding in travis"}}},"pageContext":{"slug":"/blog/cs/test-llvm-go-binding-in/"}}}