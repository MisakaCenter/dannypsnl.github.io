{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/cs/currying/","result":{"data":{"site":{"siteMetadata":{"siteUrl":"https://dannypsnl.github.io"}},"markdownRemark":{"html":"<p>我只是寫 continuation 寫一寫非常不滿意，果然先寫個廢文好了，這篇只是一個把 racket 改成 currying 的 macro 說明：</p>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\">#lang racket\n\n<span class=\"token punctuation\">(</span><span class=\"token function\">require</span> <span class=\"token punctuation\">(</span><span class=\"token function\">for-syntax</span> syntax/parse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">define-syntax</span> <span class=\"token punctuation\">(</span><span class=\"token function\">curry</span> stx<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">(</span><span class=\"token function\">syntax-parse</span> stx\n    [`<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">~literal</span> λ<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token function\">p</span><span class=\"token punctuation\">)</span> body<span class=\"token punctuation\">)</span>\n         #<span class=\"token punctuation\">'</span><span class=\"token punctuation\">(</span><span class=\"token function\">λ</span> <span class=\"token punctuation\">(</span><span class=\"token function\">p</span><span class=\"token punctuation\">)</span> body<span class=\"token punctuation\">)</span>]\n    [`<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">~literal</span> λ<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token function\">p</span> params* ...<span class=\"token punctuation\">)</span> body<span class=\"token punctuation\">)</span>\n         #<span class=\"token punctuation\">'</span><span class=\"token punctuation\">(</span><span class=\"token function\">λ</span> <span class=\"token punctuation\">(</span><span class=\"token function\">p</span><span class=\"token punctuation\">)</span>\n             <span class=\"token punctuation\">(</span><span class=\"token function\">curry</span> <span class=\"token punctuation\">(</span><span class=\"token function\">λ</span> <span class=\"token punctuation\">(</span><span class=\"token function\">params*</span> ...<span class=\"token punctuation\">)</span> body<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>]<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>先把 macro 寫好，現在來思考一下所謂 currying 到底做了什麼，簡單來說它就是 λ 只需要一個參數就好，多參數可以用多層函數模擬。坦白說，超沒用。然後套到 fp 最愛的 lazy compute，它把 λ 變成多個 λ 之後就能捕捉部分參數並回傳剩餘 λ。所以第一步就是 λ 要被轉換成多層，而本來就一層的我們不管它。於是廢文就寫完了。我們可以試一下：</p>\n<div class=\"gatsby-highlight\" data-language=\"scheme\"><pre class=\"language-scheme\"><code class=\"language-scheme\"><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token function\">curry</span> <span class=\"token punctuation\">(</span><span class=\"token function\">λ</span> <span class=\"token punctuation\">(</span><span class=\"token function\">a</span> b c<span class=\"token punctuation\">)</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">;;; result: 3</span></code></pre></div>","frontmatter":{"title":"Currying","categories":["cs"],"tags":["racket","macro"]}}},"pageContext":{"slug":"/blog/cs/currying/"}}}