{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/cs/weird-behavior/","result":{"data":{"markdownRemark":{"html":"<p>Consider the following program:</p>\n<pre><code class=\"language-go\">type AState uint8\n\nconst (\n    S1 AState = iota\n    S2\n    S3\n)\n</code></pre>\n<p>This is quite usual in Go. But we want to make it more expressive. So we have:</p>\n<pre><code class=\"language-go\">func (s *AState) ToS1() { *s = S1 }\nfunc (s *AState) ToS2() { *s = S2 }\nfunc (s *AState) ToS3() { *s = S3 }\n</code></pre>\n<p>p.s. Replace <code>ToS1</code> and others functions with meaningful names since it's a real case in the product, I don't want to show them directly.</p>\n<p>Now consider a structure:</p>\n<pre><code class=\"language-go\">type Foo struct {\n    AState *AState\n}\n</code></pre>\n<p>With decoding:</p>\n<pre><code class=\"language-go\">    foo := NewFoo()\n    var buf bytes.Buffer\n    enc := gob.NewEncoder(&#x26;buf)\n    _ = enc.Encode(foo)\n    unmarshalFoo := &#x26;Foo{}\n    decBuf := bytes.NewBuffer(buf.Bytes())\n    dec := gob.NewDecoder(decBuf)\n    dec.Decode(unmarshalFoo)\n</code></pre>\n<p>Guess what, the field <code>AState</code> has <code>nil</code> value. This is out of expected. A least, I thought it should be a pointer to <code>S1</code> as what <code>\"encoding/json\"</code> does.</p>\n<p>We have two ways to solve this.</p>\n<p>First, remove the pointer from the field type.</p>\n<pre><code class=\"language-go\">type Foo struct {\n    AState AState\n}\n</code></pre>\n<p>Or we can use <code>iota + 1</code></p>\n<pre><code class=\"language-go\">const (\n    S1 AState = iota + 1\n        // ...\n)\n</code></pre>","frontmatter":{"title":"Weird behavior in Go: encoding/gob"}}},"pageContext":{"slug":"/blog/cs/weird-behavior/"}}}